{"version":3,"sources":["components/input.jsx","components/output.jsx","components/navbar.jsx","components/button.jsx","App.js","index.js"],"names":["Input","state","className","id","onChange","this","props","placeholder","Component","Output","Navbar","Button","onClick","App","inpValue","handleChange","inp","document","getElementById","value","console","log","setState","handleSubmit","text","length","formattedText","formatText","tokenize","s","parsers","deftok","m","r","t","tokens","key","exec","index","token","type","matches","slice","push","substr","tokienList1","word","tokienList","filter","sql","i","concat","ReactDOM","render","StrictMode"],"mappings":"uOAmBeA,G,kNAhBbC,MAAQ,G,uDAEN,OACE,yBAAKC,UAAU,cAAcC,GAAG,aAC9B,yBAAKD,UAAU,wBACf,8BACEC,GAAG,WACHD,UAAU,eACVE,SAAUC,KAAKC,MAAMF,SACrBG,YAAY,+B,GAVFC,cCgBLC,E,4MAfbR,MAAQ,G,uDAEN,OACE,yBAAKC,UAAU,cAAcC,GAAG,cAC9B,yBAAKD,UAAU,wBACf,8BACEA,UAAU,eACVC,GAAG,YACHI,YAAY,yC,GATDC,aCWNE,E,4MAVbT,MAAQ,G,uDAEN,OACE,yBAAKC,UAAU,8BACb,0BAAMA,UAAU,wBAAhB,qB,GALaM,aCeNG,E,4MAdbV,MAAQ,G,uDAEN,OACE,4BACEC,UAAU,0BACVC,GAAG,YACHS,QAASP,KAAKC,MAAMM,SAHtB,e,GAJeJ,aCyFNK,E,4MAnFbZ,MAAQ,CACNa,SAAU,I,EAeZC,aAAe,WACb,IAAMC,EAAMC,SAASC,eAAe,YAAYC,MAChDC,QAAQC,IAAIL,GACZ,EAAKM,SAAS,CAAER,SAAUE,K,EAG5BO,aAAe,WACb,IAAMC,EAAO,EAAKvB,MAAMa,SACxBM,QAAQC,IAAIG,EAAKC,QAEjB,IAAMC,EAAgB,EAAKC,WAAWH,GACtCJ,QAAQC,IAAIK,GACZT,SAASC,eAAe,aAAaC,MAAQO,G,EAE/CE,SAAW,SAACC,EAAGC,EAASC,GAKtB,IAJA,IAAIC,EACFC,EACAC,EACAC,EAAS,GACJN,GAAG,CAGR,IAAK,IAAIO,KAFTF,EAAI,KACJF,EAAIH,EAAEJ,OACUK,GACdG,EAAIH,EAAQM,GAAKC,KAAKR,KAGbI,EAAEK,MAAQN,IACjBE,EAAI,CACFK,MAAON,EAAE,GACTO,KAAMJ,EACNK,QAASR,EAAES,MAAM,IAEnBV,EAAIC,EAAEK,OAGNN,GAGFG,EAAOQ,KAAK,CACVJ,MAAOV,EAAEe,OAAO,EAAGZ,GACnBQ,KAAMT,GAAU,YAGhBG,GAEFC,EAAOQ,KAAKT,GAEdL,EAAIA,EAAEe,OAAOZ,GAAKE,EAAIA,EAAEK,MAAMd,OAAS,IAEzC,OAAOU,G,EAGTR,WAAa,SAACH,GACZ,IAAMqB,EAAc,EAAKjB,SAASJ,EAAM,CAAEsB,KAAM,OAAS,WACnDC,EAAU,YAAOF,EAAYG,QAAO,SAACd,GAAD,MAAkB,SAAXA,EAAEM,SAEnDpB,QAAQC,IAAI0B,GAIZ,IAFA,IAAIE,EAAM,GAEDC,EAAI,EAAGA,EAAIH,EAAWtB,OAAQyB,IACrCD,EAAMA,EAAIE,OAAOJ,EAAWG,GAAGX,OAAOY,OAAO,MAG/C,OAAOF,G,uDA5EP,OACE,6BACE,kBAAC,EAAD,MACA,yBAAK/C,UAAU,kBAAkBC,GAAG,aAClC,kBAAC,EAAD,CAAOC,SAAUC,KAAKU,eACtB,kBAAC,EAAD,CAAQH,QAASP,KAAKkB,eACtB,kBAAC,EAAD,Y,GAXQf,aCFlB4C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrC,SAASC,eAAe,U","file":"static/js/main.94e8e218.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Input extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"input-group\" id=\"inputText\">\n        <div className=\"input-group-prepend\"></div>\n        <textarea\n          id=\"inputSQL\"\n          className=\"form-control\"\n          onChange={this.props.onChange}\n          placeholder=\"Input SQL Query here!\"\n        ></textarea>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from \"react\";\n\nclass Output extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"input-group\" id=\"outputText\">\n        <div className=\"input-group-prepend\"></div>\n        <textarea\n          className=\"form-control\"\n          id=\"outputSQL\"\n          placeholder=\"Formatted SQL will appear here!\"\n        ></textarea>\n      </div>\n    );\n  }\n}\n\nexport default Output;\n","import React, { Component } from \"react\";\n\nclass Navbar extends Component {\n  state = {};\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <span className=\"navbar-brand mb-0 h1\">SQLFormatter</span>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nclass Button extends Component {\n  state = {};\n  render() {\n    return (\n      <button\n        className=\"btn btn-warning btn-lg \"\n        id=\"formatBtn\"\n        onClick={this.props.onClick}\n      >\n        Format!\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Input from \"./components/input\";\nimport Output from \"./components/output\";\nimport Navbar from \"./components/navbar\";\nimport Button from \"./components/button\";\n\nclass App extends Component {\n  state = {\n    inpValue: \"\",\n  };\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <div className=\"container-fluid\" id=\"container\">\n          <Input onChange={this.handleChange} />\n          <Button onClick={this.handleSubmit} />\n          <Output />\n        </div>\n      </div>\n    );\n  }\n\n  handleChange = () => {\n    const inp = document.getElementById(\"inputSQL\").value;\n    console.log(inp);\n    this.setState({ inpValue: inp });\n  };\n\n  handleSubmit = () => {\n    const text = this.state.inpValue;\n    console.log(text.length);\n\n    const formattedText = this.formatText(text);\n    console.log(formattedText);\n    document.getElementById(\"outputSQL\").value = formattedText;\n  };\n  tokenize = (s, parsers, deftok) => {\n    var m,\n      r,\n      t,\n      tokens = [];\n    while (s) {\n      t = null;\n      m = s.length;\n      for (var key in parsers) {\n        r = parsers[key].exec(s);\n        // try to choose the best match if there are several\n        // where \"best\" is the closest to the current starting point\n        if (r && r.index < m) {\n          t = {\n            token: r[0],\n            type: key,\n            matches: r.slice(1),\n          };\n          m = r.index;\n        }\n      }\n      if (m) {\n        // there is text between last token and currently\n        // matched token - push that out as default or \"unknown\"\n        tokens.push({\n          token: s.substr(0, m),\n          type: deftok || \"unknown\",\n        });\n      }\n      if (t) {\n        // push current token onto sequence\n        tokens.push(t);\n      }\n      s = s.substr(m + (t ? t.token.length : 0));\n    }\n    return tokens;\n  };\n\n  formatText = (text) => {\n    const tokienList1 = this.tokenize(text, { word: /\\w+/ }, \"invalid\");\n    const tokienList = [...tokienList1.filter((t) => t.type === \"word\")];\n\n    console.log(tokienList);\n\n    var sql = \"\";\n\n    for (var i = 0; i < tokienList.length; i++) {\n      sql = sql.concat(tokienList[i].token).concat(\"\\n\");\n    }\n\n    return sql;\n  };\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}